{"version":3,"sources":["components/CreateUser.js","components/Login.js","components/Welcome.js","components/AllFoodCard.js","components/AllFoods.js","components/InventoryCard.js","components/Ingredients.js","components/Spices.js","components/Meals.js","components/NavBar.js","components/Expiring.js","components/Snacks.js","components/Inventory.js","components/RecipeCards.js","components/RecipeIngredientSearch.js","components/RecipesAddForm.js","components/Recipes.js","App.js","reportWebVitals.js","index.js"],"names":["CreateUser","handleClick","useState","name","setName","password","setPassword","passConfirm","setPassConfirm","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","username","password_confirmation","then","r","ok","json","data","swal","alert","errors","for","type","placeholder","required","onChange","target","value","Login","login","userForm","setUserForm","visibilityState","setvisibilityState","id","style","visibility","className","onClick","Welcome","setUser","user","to","Button","variant","AllFoodCard","food","finalizeAdd","deleteFromAll","editExp","setEditExp","exp","setExp","expEdit","useEffect","date","Date","setDate","getDate","ave_expiration_length","day","month","getMonth","year","getFullYear","Card","width","bg","Img","src","url","height","Body","Title","Text","Form","Control","marginLeft","itemID","parentNode","firstChild","expiration","buttons","cancel","catch","text","AllFoods","createNewFood","foods","setFoods","display","setDisplay","newFoodName","setNewFoodName","newCategory","setNewCategory","newImage","setNewImage","newExpiration","setNewExpiration","popoverBottom","Popover","title","newFood","category","reset","Select","aria-label","console","log","newFoods","filter","item","searchedItem","toLowerCase","includes","displayedFoods","OverlayTrigger","trigger","placement","overlay","map","InventoryCard","deletePantryItem","pantryitems","quantity","setQuantity","expiration_date","marginBottom","Ingredients","pantry","searched","ingredients","setIngredients","undefined","items","ingredient","Spices","spices","setspices","spice","Meals","meals","setmeals","meal","NavBar","show","setShow","navigate","useNavigate","Navbar","expand","Container","fluid","Brand","Toggle","aria-controls","Collapse","Nav","maxHeight","navbarScroll","NavDropdown","onMouseEnter","onMouseLeave","Item","Divider","Link","Expiring","slice","Snacks","snacks","setsnacks","snack","Inventory","setSearch","setValue","expiring","setExpiring","expConversion2","today","expDatesFilter","getTime","expiringProduct","search","class","product","RecipeCards","recipe","recipeRemoval","recipeUrl","setRecipeUrl","pantryFilter","ingredientsOwned","window","confirm","ListGroup","Table","recipefoods","href","rel","RecipeIngredientSearch","assignFood","RecipesAddForm","resetForm","newRecipe","recName","setRecName","recUrl","setRecUrl","setSearched","shownIngredients","setShownIngredients","food_id","ingredients_attributes","InputGroup","length","autocomplete","Recipes","form","setForm","recipes","setRecipes","displayedRecipes","App","setPantry","newPantry","exact","path","element","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6b5504e.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport swal from 'sweetalert'\n\nfunction CreateUser({handleClick}) {\n    const [name, setName] = useState(\"\")\n    const [password, setPassword]= useState(\"\")\n    const [passConfirm, setPassConfirm] = useState(\"\")\n    function handleChange (e){\n        setName(e.target.value)\n    }\n    function passChange (e){\n        setPassword(e.target.value)\n    }\n    function passConfirmChange (e){\n        setPassConfirm(e.target.value)\n    }\n        function handleSubmit(e){\n            e.preventDefault()\n            fetch(\"/signup\", {\n                method: \"POST\",\n                headers:{\n                    \"Content-type\" : \"Application/json\"\n                },\n                body: JSON.stringify({\n                    username : name,\n                    password : password,\n                    password_confirmation : passConfirm\n                }\n                )})\n                .then (r=>{\n                    if (r.ok) {\n                    r.json().then(data=>swal(data.username+ \"created, please log in\"))\n                    }\n                    else{\n                        r.json().then(data=>alert(data.errors))\n                    }\n            })\n            handleClick()}\n\n  \n      return (\n        <div>\n            <form onSubmit={handleSubmit}>\n       <label for=\"createUser\"><b>Username</b></label>\n           <input type=\"text\" placeholder='...' required onChange={handleChange}></input>\n           <br></br><label for=\"pass\"><b>Password? </b></label>\n           <input type=\"password\" placeholder='...' required onChange={passChange}></input>\n           <br></br>\n           <input type=\"password\" placeholder='...' required onChange={passConfirmChange}></input>\n           <br></br>\n            <input type=\"submit\" value=\"Create Profile\"/>\n     </form>\n        </div>\n      )\n}\n\nexport default CreateUser","import React, {useState} from 'react'\nimport CreateUser from './CreateUser'\n\nfunction Login({login}) {\n    const [userForm, setUserForm] = useState(false)\n    const [visibilityState, setvisibilityState] = useState(\"visible\")\n    const [name, setName] = useState (\"\")\n    const [password, setPassword] = useState(\"\")\n   \n    function handleClick(){\n        setUserForm(!userForm)\n        if (visibilityState ===\"visible\"){\n            setvisibilityState(\"hidden\")\n        }\n        else {\n            setvisibilityState(\"visible\")\n        } }\n    function changeName(e){\n        setName(e.target.value)\n    }\n    function changePass(e){\n        setPassword(e.target.value)\n    }\n    function handleSubmit(e){\n        e.preventDefault()\n        fetch('/login', {\n            method: \"POST\",\n            headers: {\"Content-type\" : \"Application/json\"},\n            body: JSON.stringify({\n                username : name, \n                password : password}\n            )\n        })\n        .then (r=>{\n            if (r.ok) {\n            r.json().then(data=>login(data.username))\n            }\n            else{\n                r.json().then(data=>alert(data.errors))\n            }})}\n     \n  return (\n    <div id={\"loginPage\"}>\n        <h1 > Your Pantry</h1>\n        <p> An app to help you track all the food in your house. From expiration warnings to recipe lists this app is designed to be the only thing you need when planning meals or grocery runs.</p>\n        <form  style={{visibility: visibilityState}} onSubmit={handleSubmit}>\n   <label for=\"uname\"><b>Username: </b></label>\n       <input type=\"text\" placeholder='Name' required onChange={changeName} name=\"name\" className='userLogin'></input>\n       <br></br>\n       <label for=\"pass\"><b>Password: </b></label>\n       <input type=\"password\" placeholder='Enter Password' required name=\"password\" onChange={changePass} className='userLogin'></input>\n       <br></br>\n        <input type=\"submit\" value=\"Login\" />\n </form>\n<br></br>\n <div id=\"createUser\">\n        <button value=\"Create User\" onClick={handleClick} className=\"userButton\">{userForm? \"Login\" : \"Create User\"}</button>\n        {userForm ? <CreateUser handleClick={handleClick}/>: null}\n    </div>\n    </div>\n  )\n}\n\nexport default Login","import React from 'react'\nimport Button from 'react-bootstrap/Button';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nfunction Welcome({setUser, user}) {\n  return (\n    <div className='welcome'>\n       <h1> Welcome to your Pantry, {user}!</h1>\n       <p className='appExplination'>\n         To add new ingredients, spices, or premade meals to your pantry's inventory visit the {<LinkContainer to=\"/allFoods\"><Button variant=\"outline-info\"> All Foods </Button></LinkContainer>} page.\n         Your {<LinkContainer to=\"/inventory\"><Button variant=\"outline-info\">Pantry</Button></LinkContainer>} will show you everything you own. If you want a more specific list\n        you can review your {<LinkContainer to=\"/ingredients\"><Button variant=\"outline-info\"> ingredients </Button></LinkContainer>} and {<LinkContainer to=\"/spices\"><Button variant=\"outline-info\"> spices </Button></LinkContainer>}. Or check out your {<LinkContainer to=\"/recipes\"><Button variant=\"outline-info\"> recipe book </Button></LinkContainer>} for some extra inspiration and to ensure you have everything you need. If you don't have the time or energy to cook, just head over to your {<LinkContainer to=\"/meals\"><Button variant=\"outline-info\">premade meals </Button></LinkContainer>} or {<LinkContainer to=\"/snacks\"><Button variant=\"outline-info\">snacks </Button></LinkContainer>}and pick something to eat NOW!\n         \n        </p>\n\n\n    </div>\n  )\n}\n\nexport default Welcome","import React, {useState, useEffect} from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport Form from 'react-bootstrap/Form';\nimport swal from 'sweetalert'\n\nfunction AllFoodCard({food, finalizeAdd, deleteFromAll}) {\nconst [editExp, setEditExp] = useState(false)\nconst [exp, setExp] = useState(\"\")\nfunction expEdit(){\nsetEditExp(!editExp)\n}\nfunction expChange(e){\n    setExp(e.target.value)\n}\n\nuseEffect(()=> {\n    let date = new Date();\n    date.setDate(date.getDate() + food.ave_expiration_length);\n    let day = date.getDate()\n    let month = date.getMonth() +1\n    let year = date.getFullYear()\n    setExp(`${year}-${month}-${day}`)\n}, [food.ave_expiration_length])\n\nfunction addFoodToPantry(e){\n    e.preventDefault()\n    let itemID = e.target.parentNode.firstChild.id\n    fetch ('/pantryitems', {\n        method: \"POST\",\n        headers: {\n            \"Content-type\" : \"Application/json\"\n        },\n        body: JSON.stringify({\n            id: itemID,\n            expiration: exp\n        })\n    })\n    .then(r=>r.json())\n    .then(data=> {\n      swal(food.name + \" added to pantry\")\n      finalizeAdd(data, food)})\n}\n\nfunction deleteFood(){\n\n  swal(\"This will delete food for ALL USERS. Only delete if you are sure [Admin ONLY]\",{\n    buttons: {\n      cancel: \"Nevermind\",\n      catch: {\n        text: \"Yes, delete!\",\n        value: \"confirm\",},},})\n  .then((value)=>{\n    switch(value){\n      case \"confirm\":\n        fetch(`/foods/${food.id}`,{\n          method: \"DELETE\",})\n          .then (r=> {\n            if (r.ok){\n              deleteFromAll(food.id)\n          }\n        })\n        swal(\"Deleted\");\n        break;\n        default:\n          swal('Left Alone')\n    }\n  })\n}\n  return (\n    <div className='allFoodsCard' >\n        <Card style={{ width: '13rem' }} bg=\"secondary\">\n      <Card.Img src={food.url} style={{ height: '10rem' }}/>\n      <Card.Body>\n        <Card.Title id={food.id}>{food.name}</Card.Title>\n        {editExp ? <Card.Text> <Form>\n            <Form.Control \n            type=\"date\"\n            placeholder=\"expiration\"\n            onChange={expChange}\n            />\n          <Button variant=\"success\" onClick={expEdit}>Submit</Button></Form>\n        </Card.Text> : <Card.Text>\n          {exp}\n          <Button style={{marginLeft : '15px'}} variant=\"danger\" onClick={expEdit}>Edit</Button>\n        </Card.Text> }\n        <Button variant=\"success\" onClick={addFoodToPantry}>Add to Pantry</Button> \n        <Button variant=\"danger\" className=\"delete\" onClick={deleteFood}><span >X</span></Button>\n      </Card.Body>\n    </Card>\n    </div>\n  )\n}\n\nexport default AllFoodCard","import React, {useState, useEffect} from 'react'\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover'\nimport Form from 'react-bootstrap/Form';\nimport AllFoodCard from './AllFoodCard';\nimport swal from 'sweetalert';\n\nfunction AllFoods({finalizeAdd, createNewFood}) {\n    const [foods, setFoods] = useState([])\n    const [display, setDisplay] = useState([])\n    const [newFoodName, setNewFoodName] = useState([]),\n    newName = ({target:{value}}) => setNewFoodName(value)\n    const [newCategory, setNewCategory] = useState([]),\n    onInput = ({target:{value}}) => setNewCategory(value)\n    const [newImage, setNewImage] = useState([]),\n    newImageURL = ({target:{value}}) => setNewImage(value)\n    const [newExpiration, setNewExpiration] = useState([]),\n    newExp = ({target:{value}}) => setNewExpiration(value)\n\n    useEffect(()=>{\n        fetch('/foods')\n        .then(r=>r.json())\n        .then(foods=>{\n            setFoods(foods)\n            setDisplay(foods)})\n    }, [])\n\n    function filter (e){\n        let category = e.target.value\n        if (category === \"All Foods\"){\n            setDisplay(foods)\n        }\n        else {\n       let displayedFoods= foods.filter(food => food.category === category)\n        setDisplay(displayedFoods)\n        }\n    }\n\n\n    function search(e){\n      let item = e.target.value\n      let searchedItem = foods.filter(food => food.name.toLowerCase().includes(item.toLowerCase()) )\n      setDisplay(searchedItem)\n     \n    }\n    const popoverBottom = (\n      <Popover id=\"popover-positioned-bottom\" title=\"Popover bottom\">\n        <Form onSubmit={onFormSubmit} >\n            <Form.Control\n              type=\"text\"\n              placeholder=\"New Food Name\"\n              className=\"me-2\"\n              onChange={newName}\n            />\n            <Form.Control\n              type=\"url\"\n              placeholder=\"New Food Image URL\"\n              className=\"me-2\"\n              onChange={newImageURL}\n            />\n             <Form.Control\n              type=\"text\"\n              placeholder=\"Average Days to Expiration\"\n              className=\"me-2\"\n              onChange={newExp}\n            />\n             <Form.Select aria-label=\"Default select example\" onChange={onInput}>\n      <option value=\"ingredient\">Ingredient</option>\n      <option value=\"spice\">Spice</option>\n      <option value=\"snack\">Snack</option>\n      <option value=\"premade\">Premade Meal</option>\n    </Form.Select>\n            \n              <Button type=\"Submit\">Create Food</Button>\n           \n          </Form>\n      </Popover>\n    );\n    function onFormSubmit (e) {\n      e.preventDefault()\n      let newFood = {\n        name : newFoodName,\n        url : newImage,\n        ave_expiration_length : newExpiration,\n        category : newCategory \n      }\n      fetch ('/foods', {\n        method: \"POST\",\n        headers: {\"Content-type\" : \"Application/json\"},\n        body: JSON.stringify(newFood)\n      })\n      .then(r=>{\n        if (r.ok) {r.json()\n          .then(data=>{\n                 let newFood = [...foods,data]\n                 setFoods(newFood)\n                 setDisplay(newFood)\n         })}\n        else{\n            swal(\"All foods require a name, and a genre\")\n    }})\n      swal(`Created ${newFoodName}, add another?`)\n      e.target.reset()\n      }\n\nfunction deleteFromAll(id){\n  console.log(\"delete run\")\n  let newFoods = foods.filter(item => item.id !== id)\n  setFoods(newFoods)\n  setDisplay(newFoods)\n}\n  return (\n    <div>\n       <h1>All Foods</h1>\n       <div className=\"allSearch\">\n       <Form className=\"d-flex\">\n            <Form.Control\n              type=\"search\"\n              placeholder=\"Search All Foods\"\n              className=\"me-2\"\n              aria-label=\"Search\"\n              onChange={search}\n            />\n          </Form>\n          <h3> OR FILTER BY:</h3>\n          <Form.Select aria-label=\"Default select example\" onChange={filter}>\n      <option>All Foods</option>\n      <option value=\"ingredient\">Ingredients</option>\n      <option value=\"spice\">Spices</option>\n      <option value=\"premade\">Pre-Made Meals</option>\n      <option value=\"snack\">Snacks</option>\n    </Form.Select>\n    </div>\n    <div className='addnewCategory'>\n      <br></br>\n      <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popoverBottom}>\n        <Button> New Food</Button>\n      </OverlayTrigger>\n    </div>\n    <br></br>\n    {display.map(food=> <AllFoodCard food={food} key={food.id} finalizeAdd={finalizeAdd} deleteFromAll={deleteFromAll}/>)}\n  \n    </div>\n  )\n}\n\nexport default AllFoods","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport Form from 'react-bootstrap/Form'\nimport swal from 'sweetalert'\n\n\nfunction InventoryCard({food, deletePantryItem}) {\n  const [quantity, setQuantity] = useState(food.pantryitems[0].quantity)\n  const [editExp, setEditExp] = useState(false)\n  const [exp, setExp] = useState(food.pantryitems[0].expiration_date)\nfunction expEdit(){\n\n  fetch(`/pantryitems/${food.id}`,{\n    method: \"PATCH\",\n     headers: {\n    \"Content-Type\" : \"Application/json\"\n    },\n    body: JSON.stringify({\n    expiration_date: exp\n   })\n    })\n  .then(r=>r.json())\n  .then(data=>setExp(data.expiration_date))\n  setEditExp(!editExp)\n  }\n\nfunction expChange(e){\n    setExp(e.target.value)\n  }\n\n  function showEdit(){\n    setEditExp(!editExp)\n  }\n\n\nfunction deleteFromPantry(){\n    swal(\"Remove item from Pantry/Reduce Quantity by 1?\", {\n      buttons: {\n        cancel: \"Nevermind!\",\n        catch: {\n          text: \"Delete\",\n          value: \"catch\",\n        }\n      },\n    })\n    .then((value) => {\n      switch (value) {\n        case \"catch\":\n          fetch(`/pantryitems/${food.id}`, \n          { method: \"DELETE\" }).then((r) => {\n              if (r.ok) {\n                if (quantity > 1){\n                  setQuantity(quantity-1)\n                }\n                else\n               deletePantryItem(food.id)\n              }\n            });\n          swal(\"Removed\");\n          break;\n     \n        default:\n          swal(\"Nothing happened.\");\n      }\n    });\n       \n    }\n\n  return (\n    <div className='pantryItemCard' >\n    <Card style={{ width: '13rem' }} bg=\"secondary\">\n  <Card.Img src={food.url} style={{ height: '10rem' }}/>\n  <Card.Body>\n    <Card.Title id={food.id}>{food.name}</Card.Title>\n\n    {editExp ? <Card.Text> <Form>\n            <Form.Control \n            type=\"date\"\n            placeholder=\"expiration\"\n            onChange={expChange}\n            />\n          <Button variant=\"success\" onClick={expEdit}>Submit</Button></Form>\n        </Card.Text> : <Card.Text>\n      {\"Expires: \" + exp}\n          <Button style={{marginLeft : '15px'}} variant=\"danger\" onClick={showEdit}>Edit</Button>\n        </Card.Text> }\n    <Card.Text>\n      {\"Quantity: \" + quantity}\n    </Card.Text>\n    <Button variant=\"danger\" style={{marginBottom : '-10px'}} onClick={deleteFromPantry}>Remove</Button> \n  </Card.Body>\n</Card>\n</div>\n  )\n}\n\nexport default InventoryCard","import React, {useState, useEffect} from 'react'\nimport InventoryCard from './InventoryCard'\n\n\nfunction Ingredients({pantry, deletePantryItem, searched}) {\n    const [ingredients, setIngredients] = useState([])\n\n    useEffect(()=>{\n      if (searched === undefined){\n       let items= pantry.filter(item => item.category === 'ingredient')\n       setIngredients(items)\n      }\n      else{\n        console.log(\"searching...\")\n    \n        let items = pantry.filter(item => (item.name.toLowerCase().includes(searched.toLowerCase()) && item.category==='ingredient'))\n        setIngredients(items)\n      }\n\n\n    },[pantry, searched])\n\n\n\n  return (\n    <div className='pantrySection'>\n      <h2>Ingredients</h2>\n        {ingredients.map(ingredient=><InventoryCard food={ingredient} deletePantryItem={deletePantryItem} key={ingredient.id}/>)}\n    </div>\n  )\n}\n\nexport default Ingredients","import React, { useEffect, useState } from 'react'\nimport InventoryCard from './InventoryCard'\n\n\nfunction Spices({pantry, deletePantryItem, searched}) {\n  const [spices, setspices] = useState([])\n\n  useEffect(()=>{\n    if (searched === undefined){\n     let items= pantry.filter(item => item.category === 'spice')\n     setspices(items)\n    }\n    else{\n      let items = pantry.filter(item => (item.name.toLowerCase().includes(searched.toLowerCase()) && item.category==='spice'))\n      setspices(items)\n    }},[pantry, searched])\n\nreturn (\n  <div className='pantrySection'>\n    <h2> Spices</h2>\n          {spices.map(spice=><InventoryCard food={spice} deletePantryItem={deletePantryItem} key={spice.id}/>)}\n  </div>\n)\n}\n\nexport default Spices","import React, {useState, useEffect} from 'react'\nimport InventoryCard from './InventoryCard'\n\n\nfunction Meals({pantry, deletePantryItem, searched}) {\n    const [meals, setmeals] = useState([])\n\n    useEffect(()=>{\n      if (searched === undefined){\n       let items= pantry.filter(item => item.category === 'premade')\n       setmeals(items)\n      }\n      else{\n        let items = pantry.filter(item => (item.name.toLowerCase().includes(searched.toLowerCase()) && item.category==='meal'))\n        setmeals(items)\n      }\n    },[pantry, searched])\n\n\n  return (\n    <div className='pantrySection'>\n      <h2> Meals</h2>\n       {meals.map(meal=><InventoryCard food={meal} deletePantryItem={deletePantryItem} key={meal.id}/>)}\n    </div>\n  )\n}\n\nexport default Meals","import Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport {LinkContainer} from 'react-router-bootstrap'\nimport {useState} from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nfunction NavBar({setUser}) {\n    const [show, setShow] = useState(false);\n    const navigate = useNavigate()\nconst showDropdown = (e)=>{\n    setShow(!show);\n}\nconst hideDropdown = e => {\n    setShow(false);\n}\n    function logout(){\n            fetch(\"/logout\", { method: \"DELETE\" }).then((r) => {\n              if (r.ok) {\n                setUser(null);\n                navigate(\"/\")\n              }\n            });\n    }\n  return (\n    <Navbar bg=\"info\" expand=\"lg\" className='navbar'>\n        <Container fluid>\n        <LinkContainer to=\"/\">\n        <Navbar.Brand >Food Tracker</Navbar.Brand>\n        </LinkContainer>\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\n        <Navbar.Collapse id=\"navbarScroll\">\n          <Nav\n            className=\"me-auto my-2 my-lg-0\"\n            style={{ maxHeight: '100px' }}\n            navbarScroll\n          >\n          <NavDropdown title=\"Pantry\" id=\"navbarDropdown\" show={show}\n   onMouseEnter={showDropdown} \n   onMouseLeave={hideDropdown}\n   >\n       <LinkContainer to=\"/inventory\"> \n          <NavDropdown.Item className=\"dropdownItem\">Full Inventory</NavDropdown.Item> \n          </LinkContainer>\n          <LinkContainer to=\"/ingredients\"> \n          <NavDropdown.Item className=\"dropdownItem\">Ingredients</NavDropdown.Item> \n          </LinkContainer>\n          <LinkContainer to=\"/spices\"> \n              <NavDropdown.Item >\n                Spices\n              </NavDropdown.Item>\n              </LinkContainer>\n              <LinkContainer to=\"/snacks\"> \n              <NavDropdown.Item >\n                Snacks\n              </NavDropdown.Item>\n              </LinkContainer>\n              <NavDropdown.Divider />\n              <LinkContainer to=\"/meals\">\n              <NavDropdown.Item>\n                Premade Meals\n              </NavDropdown.Item>\n              </LinkContainer>\n            </NavDropdown>\n            <LinkContainer to=\"/allFoods\">\n            <Nav.Link >All Foods</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/recipes\">\n            <Nav.Link >Meals/Recipes</Nav.Link>\n            </LinkContainer>\n          </Nav>\n         \n          <Button variant=\"danger\" className='logoutBtn' onClick={logout}>Logout</Button>\n        </Navbar.Collapse>\n\n        </Container>\n    </Navbar>\n  );\n}\n\nexport default NavBar;","import React from 'react'\nimport Card from 'react-bootstrap/Card'\n\nfunction Expiring({food}) {\n  return (\n    <div  className='expiring' >\n        <Card body bg=\"danger\">{food.name} expires {food.pantryitems[0].expiration_date.slice(-5)}</Card>\n    </div>\n  )\n}\n\nexport default Expiring","import React, {useState, useEffect} from 'react'\nimport InventoryCard from './InventoryCard'\n\nfunction Snacks({pantry, deletePantryItem, searched}) {\n    const [snacks, setsnacks] = useState([])\n\n    useEffect(()=>{\n      if (searched === undefined){\n       let items= pantry.filter(item => item.category === 'snack')\n       setsnacks(items)\n      }\n      else{\n        let items = pantry.filter(item => (item.name.toLowerCase().includes(searched.toLowerCase()) && item.category==='snack'))\n        setsnacks(items)\n      }},[pantry, searched])\n\n\n\n  return (\n    <div className='pantrySection'>\n      <h2> Snacks</h2>\n            {snacks.map(snack=><InventoryCard food={snack} deletePantryItem={deletePantryItem} key={snack.id}/>)}\n    </div>\n  )\n}\n\nexport default Snacks","import React, {useEffect, useState} from 'react'\nimport Button from 'react-bootstrap/esm/Button'\nimport Form  from 'react-bootstrap/Form'\nimport Expiring from './Expiring'\nimport Ingredients from './Ingredients'\nimport Meals from './Meals'\nimport Snacks from './Snacks'\nimport Spices from './Spices'\n\nfunction Inventory({pantry, deletePantryItem, user}) {\n  const [searched, setSearch] = useState(undefined)\n  const [value, setValue] = useState(\"\")\n  const [expiring, setExpiring] = useState([])\n\n  function search (e){\n    e.preventDefault()\n    let item = e.target.parentNode.firstChild.value\n    setSearch(item)\n  }\n  function submit(e){\n    e.preventDefault()\n    let search = e.target.firstChild.value\n    setSearch(search)\n   setValue(\"\")\n  }\n function refresh(){\n let refresh= undefined\n  setSearch(refresh)\n  setValue(\"\")\n }\n function typing(e){\n   setValue(e.target.value)\n }\nuseEffect(()=>{\n  let expConversion1 = pantry.map(food => food.pantryitems[0].expiration_date)\n  let expConversion2 = expConversion1.map(item => new Date(item))\n  let today = new Date()\n  today.setDate(today.getDate()+30)\n  let expConversion3 = expConversion2.filter(date => date.getTime() < today.getTime())\n  let expDatesFilter = expConversion3.map(date => {\n   let dateString = date.getFullYear() + '-'\n    + ('0' + (date.getMonth()+1)).slice(-2) + '-'\n    + ('0' + (date.getDate()+1)).slice(-2);\n  return dateString\n  })\n  let expiringProduct = pantry.filter(item=> expDatesFilter.includes(item.pantryitems[0].expiration_date))\n  // console.log(expiringProduct)\n  setExpiring(expiringProduct)\n}, [pantry])\n\n  return (\n    <div>\n        <h1 id=\"pantryTitle\">{user}'s Pantry</h1>\n        <Form className=\"pantrySearch\" onSubmit={submit}>\n            <Form.Control\n              type=\"search\"\n              placeholder=\"Search Pantry\"\n              className=\"me-2\"\n              aria-label=\"Search\"\n              value={value}\n              onChange={typing}\n            />\n            <Button variant=\"success\"><span class=\"reload\" onClick={refresh}>&#x21bb;</span></Button>\n            <Button variant=\"info\"   onClick={search}>Search</Button>\n          </Form>\n    <div >\n        <h1 id=\"expireTitle\"> EXPIRING:</h1>\n        {expiring.map( product => <Expiring food={product} key={product.id}/> )}\n    </div>\n        <Ingredients pantry={pantry} deletePantryItem={deletePantryItem} searched={searched}/>\n        <Spices pantry={pantry} deletePantryItem={deletePantryItem} searched={searched}/>\n        <Snacks pantry={pantry} deletePantryItem={deletePantryItem} searched={searched}/>\n        <Meals pantry={pantry} deletePantryItem={deletePantryItem} searched={searched}/>\n    </div>\n  )\n}\n\nexport default Inventory","import React, { useState } from 'react'\nimport { Button, Card, Form, ListGroup, Table } from 'react-bootstrap'\n\nfunction RecipeCards({recipe, pantry, recipeRemoval}) {\nconst [show, setShow] = useState(false)\nconst [recipeUrl, setRecipeUrl] = useState(\"\")\nfunction showRecipe(){\n    setShow(!show)\n}\nlet pantryFilter = pantry.map(item=> item.name)\n  let recipeFilter = recipe.foods.map(item=> item.name)\n  let ingredientsOwned = recipeFilter.filter(item=> pantryFilter.includes(item))\n  console.log(recipe)\n\n  function newUrl(e){\n      e.preventDefault()\n      let url = e.target.firstChild.value\n      console.log(url)\n      fetch(`/recipes/${recipe.id}`,{\n          method: \"PATCH\",\n          headers: {\n              \"Content-type\": \"Application/json\"\n          },\n          body: JSON.stringify({\n              url: url\n          })\n        })\n        .then(r=>r.json())\n        .then(data=> setRecipeUrl(data.url))\n  }\nfunction deleteRecipe(){\n    console.log(recipe.name)\n    if(window.confirm(\"This will delete the recipe for all users. Are you sure you want to do this?\")){\n        fetch(`/recipes/${recipe.id}`, {\n            method: \"DELETE\",\n        })\n        .then(r=>{\n            if (r.ok){\n                recipeRemoval(recipe.id)\n            }\n        }\n        )}\n}\n\n  return (\n    <div className='recipeCard'>\n        <Card bg=\"secondary\" text=\"light\">\n            <Card.Body >\n                <Card.Title id=\"recipeTitle\">\n                    {recipe.name}\n                    <Button variant='danger' onClick={deleteRecipe}>X</Button>\n                </Card.Title >\n                <Button variant='success' onClick={showRecipe}>Recipe Details</Button>\n            { show ? <ListGroup>\n               <Table className='recipeTable'>\n                   <tbody >\n                  {recipe.foods.map(item=>{\n                  if (ingredientsOwned.includes(item.name)){\n                    return <tr className=\"testGood\"><td key={item.id}>{item.name}</td></tr>\n                  }\n                  else {\n                  return <tr className=\"testBad\"><td key={item.id}>{item.name}</td></tr>}})}\n                  </tbody>\n                  <tbody className=\"test2\">\n               {recipe.recipefoods.map(item=><tr><td key={item.id}>{item.quantity}</td></tr>)}\n               </tbody>\n               </Table>\n\n               {recipeUrl === \"\" ? \n                    <Form onSubmit={newUrl}>\n                        <Form.Control\n                         type=\"url\"\n                         placeholder='Add Recipe Url'\n                        />\n                        <Button type=\"submit\" variant='success'>Submit</Button>\n                    </Form>\n               :\n               <Card.Link \n               className='link' \n               href={recipeUrl} \n               target=\"_blank\" rel=\"norefferer\"\n               >\n                   Full Recipe\n                </Card.Link>\n                }\n               </ListGroup>: null\n            }\n              \n               \n            </Card.Body>\n        </Card>\n        </div>\n  )\n}\n\nexport default RecipeCards","import React, { useState } from 'react'\nimport { Button, Form } from 'react-bootstrap'\n\nfunction RecipeIngredientSearch({food, assignFood}) {\n    const[quantity, setQuantity] = useState(\"\")\n    function select(e){\n        e.preventDefault()\n        assignFood(food, quantity)\n    }\n    function createQuantity(e){\n        e.preventDefault()\n        setQuantity(e.target.value)\n    }\n  return (\n    <div className='ingredientSearch'>{food.name} \n    <Form >\n        <Form.Control \n        type=\"text\"\n        aria-label=\"Ingredient Quantity\"\n        className='ingredientQuantity'\n        placeholder='Quantity'\n        onChange={createQuantity}\n        />\n    <Button variant=\"info\" onClick={select}>Select</Button>\n    </Form>\n    </div>\n  )\n}\n\nexport default RecipeIngredientSearch","import React, {useState } from 'react'\nimport {Form, Button, InputGroup} from 'react-bootstrap/'\nimport swal from 'sweetalert'\nimport RecipeIngredientSearch from './RecipeIngredientSearch'\n\nfunction RecipesAddForm({resetForm, foods, newRecipe}) {\nconst [recName, setRecName] = useState(\"\")\nconst [recUrl, setRecUrl] = useState(\"\")\nconst [ingredients, setIngredients] = useState([])\nconst [searched, setSearched] = useState([])\nconst [shownIngredients, setShownIngredients] = useState([])\n\n\n    function createMeal(e){\n        e.preventDefault()\n        let recipe = {\n            name : recName,\n            url : recUrl,\n            ingredients_attributes : ingredients}\n        fetch('/recipes',{\n            method: \"POST\",\n            headers: {\n                \"Content-type\" : \"Application/json\"\n            },\n            body: JSON.stringify(recipe)\n        })\n        .then(r=>{\n            if (r.ok) {r.json()\n        .then(data=>newRecipe(data))\n            resetForm()}\n            else{\n                swal(\"A name and at least one ingredient are required\")\n        }})\n        \n      }\n\n\n    function newRecName(e){\n        setRecName(e.target.value)\n    }\n    function newRecUrl(e){\n        setRecUrl(e.target.value)\n    }\n\n    function newIngredient(e){\n        let value = e.target.value\n        if (value === \"\"){\n            setSearched(\"\")\n        }\n        else {\n        let searchedItem = foods.filter(food => food.name.toLowerCase().includes(value.toLowerCase()))\n        if (searchedItem.length === 0 ){\n        alert(\"No Food item matches what you've typed. Please check spelling. You may have to add this food to all foods if it doesn't exist already\")}\n        else{\n        setSearched(searchedItem.map(food=> <RecipeIngredientSearch food={food} assignFood={assignFood}/>))}\n        }\n        }\n    function assignFood(food, quantity){\n\n        setIngredients([...ingredients, { food_id: food.id, quantity: quantity}])\n        setSearched([])\n        setShownIngredients([...shownIngredients, {name: food.name, quantity: quantity}])\n    }\n\n\n\n  return (\n    <div className='recipeForm'>\n          <Form onSubmit={createMeal} >\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Recipe Name\"\n              className=\"recipeFormControl\"\n              onChange={newRecName}\n            />\n            <Form.Control\n              type=\"url\"\n              placeholder=\"Link to Recipe Instructions\"\n              className=\"recipeFormControl\"\n              onChange={newRecUrl}\n            />\n            <InputGroup>\n           <Form.Control\n               type=\"search\"\n               placeholder=\"Add Ingredient\"\n               className=\"recipeFormControl\"\n               name=\"New Ingredient\"\n               onChange={newIngredient}\n               autocomplete=\"off\"\n               />\n              </InputGroup>\n           {searched}\n           <ul>{shownIngredients.map(ingredient=> <li>{ingredient.name \n           + \", Quantity: \" + ingredient.quantity}</li>)}</ul>\n            <Button variant=\"success\" type=\"submit\">Create</Button>\n        </Form>\n\n\n    </div>\n  )\n}\n\nexport default RecipesAddForm","import React, { useEffect, useState } from 'react'\nimport { Button } from 'react-bootstrap'\nimport RecipeCards from './RecipeCards'\nimport RecipesAddForm from './RecipesAddForm'\n\n\nfunction Recipes({pantry}) {\nconst [form, setForm] = useState(false)\nconst [recipes, setRecipes] = useState([])\nconst [foods, setFoods] = useState([])\n\nuseEffect(()=>{\n  fetch('/recipes')\n  .then(r=>r.json())\n  .then(data=>setRecipes(data))\n}, [])\n\nuseEffect(()=>{\n  fetch('/foods')\n  .then(r=>r.json())\n  .then(foods=>{\n      setFoods(foods)\n      })\n}, [])\nfunction showForm(){\n  setForm(!form)\n}\nfunction resetForm(){\n  setForm(!form)\n}\nfunction newRecipe(meal){\n  setRecipes([...recipes, meal])\n}\nfunction recipeRemoval(data){\n  console.log(data)\n  let displayedRecipes = recipes.filter(item=> item.id!== data)\n  console.log(displayedRecipes)\n  setRecipes(displayedRecipes)\n}\n  return (\n    <div className='pantrySection'>\n\n      <h2> Home of Recipes</h2>\n      <p> All recipes created by all users are available here. Any ingredients you already own in your pantry will show up green, any ingredients you need to acquire will show up white</p> \n      <div>{form? <RecipesAddForm resetForm={resetForm} foods={foods} newRecipe={newRecipe}/> : <Button variant='primary' onClick={showForm}>Create New Recipe</Button>}\n      </div>\n      {recipes.map(recipe=> <RecipeCards recipe={recipe} key={recipe.id} pantry={pantry} recipeRemoval={recipeRemoval}/>)}\n       \n    </div>\n  )\n}\n\nexport default Recipes","import './index.css';\nimport {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport Login from './components/Login';\nimport {useState, useEffect} from 'react'\nimport Welcome from './components/Welcome';\nimport AllFoods from './components/AllFoods';\nimport Ingredients from './components/Ingredients';\nimport Spices from './components/Spices';\nimport Meals from './components/Meals';\nimport NavBar from './components/NavBar';\nimport Inventory from './components/Inventory';\nimport Snacks from './components/Snacks';\nimport Recipes from './components/Recipes';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [pantry, setPantry] = useState([])\n  \n  useEffect(() => {\n    // auto-login\n    fetch(\"/me\").then((r) => {\n      if (r.ok) {\n        r.json().then((user) => {\n          setUser(user.username)\n          fetch('/pantryitems').then((r)=>{\n            if (r.ok){\n              r.json().then(data=>setPantry(data))\n            }\n          })\n        });\n      }\n    });\n  }, []);\n\n\n  function login(data){\n    setUser(data)\n    fetch('/pantryitems').then((r)=>{\n      if (r.ok){\n        r.json().then(data=>setPantry(data))\n      }\n    })\n  }\n  function finalizeAdd(data, food){\n    let test = pantry.filter(item => item.name === food.name)\n    \n    if (test.length === 0){\n      let newItem = food\n      newItem.pantryitems.push(data)\n      let newPantry = pantry\n      newPantry.push(food)\n      setPantry(newPantry)\n    }\n    else {\n      fetch('/pantryitems')\n    .then(r=>r.json())\n    .then(data=> setPantry(data))\n    }}\n// console.log(pantry)\n  function deletePantryItem (id){\n    let newPantry = pantry.filter(item => item.id !== id)\n    setPantry(newPantry)\n  }\n\n\n  if (!user) return <Login login={login} />;\n  return (\n    <div className=\"Body\">\n      \n      <BrowserRouter>\n      <NavBar setUser={setUser}/>\n      <Routes>\n        <Route exact path=\"/\" element={<Welcome user={user}/>} />\n        <Route exact path=\"/inventory\" element={<Inventory pantry={pantry} deletePantryItem={deletePantryItem} user={user}/>}  />\n        <Route exact path=\"/allFoods\" element={<AllFoods finalizeAdd={finalizeAdd}/>}  />\n        <Route exact path=\"/ingredients\" element={<Ingredients pantry={pantry} deletePantryItem={deletePantryItem} />} />\n        <Route exact path=\"/spices\" element={<Spices pantry={pantry} deletePantryItem={deletePantryItem}/>} />\n        <Route exact path=\"/snacks\" element={<Snacks pantry={pantry} deletePantryItem={deletePantryItem}/>} />\n        <Route exact path=\"/meals\" element={<Meals pantry={pantry} deletePantryItem={deletePantryItem}/>} />\n        <Route exact path=\"/recipes\" element={<Recipes pantry={pantry}/>} />\n       </Routes>  \n       </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}